---
title: "Applicaton"
date: "`r Sys.Date()`"
output:
  xaringan::moon_reader:
    css: ["default", "abc.css"]
    lib_dir: libs
    nature:
      highlightStyle: github
      highlightLines: true
      countIncrementalSlides: false
params:
  name: "1"
---

```{r, echo=F, warning=F, message=F}
xaringanExtra::use_editable(expires = 1)
xaringanExtra::use_tile_view()
xaringanExtra::use_share_again()
xaringanExtra::use_scribble()
xaringanExtra::use_webcam()
xaringanExtra::use_panelset()
library(ManifoldDestiny)
library(RefManageR)
library(huxtable)
library(ggplot2)
library(dplyr)
library(htmltools)
library(plotly)
source(paste0(rprojroot::find_rstudio_root_file(),'/R/realregression.R'))
source(paste0(rprojroot::find_rstudio_root_file(),'/R/simulations.R'))
source(paste0(rprojroot::find_rstudio_root_file(),'/R/misc.R'))
source(paste0(rprojroot::find_rstudio_root_file(),'/R/voterrollanalysis.R'))
source(paste0(rprojroot::find_rstudio_root_file(),'/R/countingprocess.R'))
vl <- ManifoldDestiny::recnav
assign("md1", get(vl[1], envir = as.environment("package:ManifoldDestiny")))
app_a_out <- seloutput(selreport(app_1_bal,list(rep(0,4)),2,sugsol=md1[[2]]$sug_sol))
md <- md1[[2]]
```

```{r, eval=F, echo=F, message=F, warning=F}
pre_fil <- paste0(rprojroot::find_rstudio_root_file(),'/app_par.Rmd')
xaringan::inf_mr(pre_fil)
rmarkdown::render(pre_fil) 
```




## Application: `r md$recn`

### Information
- Election system:
  - Type of race: `r md$race` 
  - Candidates: `r md$candidates` 
  - Modes of voting: `r md$modes_of_voting` 

- $H_0:$ Normal election 
- $H_1:$ Rigged election: 
  - Manifold object `r md$sug_sol[1]`
  - Solved for `r md$sug_sol[2]`

[Independent spreadsheet calculations](`r md$sht`)


---

### Results

.panelset[
.panel[.panel-name[Descriptive]
```{r, echo=F}
#dt1 <- app_a_out[['decs']][1:6,]
#dt2 <- app_a_out[['decs']][7:11,]
#dt3 <- app_a_out[['decs']][12:18,]
app_a_out[['decs']][7:18,]
```
]
.panel[.panel-name[2d]
```{r, echo=F, out.width="50%"}
app_a_out[['corxy']]
```
]
.panel[.panel-name[Scatter]
```{r, echo=F, out.width="60%"}
app_a_out[['qunt']]
```
]
.panel[.panel-name[3d]
```{r, echo=F, out.width="50%",out.length="30%"}
app_a_out[['ro3d']]
```
]
.panel[.panel-name[Regression]
```{r, echo=F, out.width="60%"}
app_a_out[['regr']]
```
]
.panel[.panel-name[Residuals]
```{r, echo=F, out.width="60%"}
app_a_out[['resp']]
```
]
]

---

### Ballot predictions based on limit information implied by the estimated Manifold object(s)

```{r, echo=F}
app_a_out$cmp[,1] <- c("Mean total votes", "Number of precincts", "Zero prediction error", "In percentage", "Mean", "Standard Deviation", "Max ballot error", "1+/- prediction error", "2+/- prediction error", "2+/- prediction error", "Percentage within +/-3")
kableExtra::kbl(app_a_out$cmp,row.names=F,col.names=c("Statistic","Value"),digits=2) %>% kableExtra::kable_paper(full_width = F) 
```


